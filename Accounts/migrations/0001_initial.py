# Generated by Django 3.1.4 on 2021-01-03 17:07

import Accounts.utils
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=30)),
                ('website_key', models.CharField(default=Accounts.utils.generate_website_key, max_length=30, unique=True)),
                ('logo', models.ImageField(upload_to=Accounts.utils.get_website_logo_path)),
                ('start_mode', models.CharField(choices=[('OPL', 'On Page Load'), ('TD', 'After Time Delay'), ('NOV', 'After number of visits'), ('MJSC', 'Manually by calling a JavaScript function'), ('SURLS', 'On Specific Urls')], default='OPL', max_length=7, verbose_name='SDK start mode')),
                ('start_mode_value', models.IntegerField(default=0)),
                ('start_mode_urls', models.TextField(default='*', help_text='* means all urls, url staring with - means exclude, url starting with + means include', verbose_name='Urls where web push work')),
                ('vapid_key_pair', django.contrib.postgres.fields.jsonb.JSONField(default=Accounts.utils.generate_vapid_keypair)),
                ('fcm_key', models.CharField(blank=True, max_length=300, null=True, verbose_name='FCM key for old projects')),
                ('fcm_project_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='FCM project id for old projects')),
                ('rest_api_key', models.CharField(default=Accounts.utils.generate_website_rest_api_key, max_length=70)),
                ('sdk_auth_key', models.CharField(default=Accounts.utils.generate_website_sdk_auth_key, max_length=70)),
                ('rest_api_key_enabled', models.BooleanField(default=False)),
                ('post_subscription_html', models.TextField(blank=True, null=True)),
                ('post_subscription_html_enabled', models.BooleanField(default=False)),
                ('page_tracking', models.BooleanField(default=False)),
                ('branding', models.BooleanField(default=True)),
                ('service_worker_verified', models.BooleanField(default=False)),
                ('service_worker_path', models.CharField(default='/sw-cw.js', max_length=200)),
                ('manifest_json', models.FileField(blank=True, null=True, upload_to='')),
                ('service_worker_js', models.FileField(blank=True, null=True, upload_to='')),
                ('sdk_js', models.FileField(blank=True, null=True, upload_to='')),
                ('server_logging', models.BooleanField(default=False)),
                ('console_logging', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobilePrompt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('title', models.CharField(default="We'd like to notify you about the latest updates.", max_length=100, verbose_name='Prompt Title')),
                ('message', models.CharField(default='You can unsubscribe from notifications anytime.', max_length=300, verbose_name='Prompt Message')),
                ('allow_btn_text', models.CharField(default='Allow', max_length=15, verbose_name='allow button text')),
                ('deny_btn_text', models.CharField(default='Deny', max_length=15, verbose_name='deny button text')),
                ('position', models.CharField(choices=[('B', 'Bell'), ('SB', 'Sticky Bar'), ('DO', 'DIALOG_BOX'), ('FS', 'Full Screen'), ('SUB', 'Side-up Box'), ('SH', 'Sticky Header'), ('CM', 'Central Modal'), ('NOI', 'Native Opt In')], default='DO', max_length=10)),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Accounts.website')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GDPRPrompt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('title', models.CharField(default="We'd like to notify you about the latest updates.", max_length=100, verbose_name='Prompt Title')),
                ('message', models.CharField(default='You can unsubscribe from notifications anytime.', max_length=300, verbose_name='Prompt Message')),
                ('allow_btn_text', models.CharField(default='Allow', max_length=15, verbose_name='allow button text')),
                ('deny_btn_text', models.CharField(default='Deny', max_length=15, verbose_name='deny button text')),
                ('position', models.CharField(choices=[('SH', 'Sticky Header'), ('SF', 'Sticky Footer')], default='SH', max_length=10)),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Accounts.website')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reports_interval', models.CharField(choices=[('WE', 'Weekly'), ('DA', 'Daily'), ('MO', 'MONTHLY'), ('NE', 'NEVER')], default='WE', max_length=4)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesktopPrompt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True)),
                ('title', models.CharField(default="We'd like to notify you about the latest updates.", max_length=100, verbose_name='Prompt Title')),
                ('message', models.CharField(default='You can unsubscribe from notifications anytime.', max_length=300, verbose_name='Prompt Message')),
                ('allow_btn_text', models.CharField(default='Allow', max_length=15, verbose_name='allow button text')),
                ('deny_btn_text', models.CharField(default='Deny', max_length=15, verbose_name='deny button text')),
                ('position', models.CharField(choices=[('B', 'Bell'), ('SB', 'Sticky Bar'), ('DO', 'DIALOG_BOX'), ('FS', 'Full Screen'), ('SUB', 'Side-up Box'), ('SH', 'Sticky Header'), ('CM', 'Central Modal'), ('NOI', 'Native Opt In'), ('RS', 'Right Sidebar')], default='DO', max_length=10)),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Accounts.website')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
